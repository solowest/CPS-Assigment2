// Define varables: varable (meaning, type)
	//	firstName			( First name, char) - Done
	//	lastName			( Last name, char) - Done
	//	voiceMin			( Voice Minutes Used, int) - Done
	//	textMessages			( Text Messeages Used, int) - Done
	//	dataUsed			( Data Used in Kilobytes, int) - Done

// Give varables: varable (meaning, type)
	//	baseCharge			( Base Charge, float) - Defined
	//	voiceMinAllowed			( Voice Minutes Allowed, int) - Defined
	//	textMessagesAllowed		( Text Messeages Allowed, int) - Defined
	//	dataAllowed			( Data Allowed in Kilobytes, int) - Defined
	//	tax				( Tax, float) - Defined
	
// Output varables: varable (meaning, type)
	//	voicePrice			( Charge from Voice Minutes, float) - voiceCharge method
	//	textPrice			( Charge from Text Messeages, float) - textCharge method
	//	dataPrice			( Charge from Data Used, float)
	//	subtotalPrice			( Subtotal, float)
	//	finalTotal			( Total Due, float)
	
// Methods - (varable(s) in / varable(s) out)
	// get inputs 				( / firstName, lastName, voiceMin, textMessages, dataUsed) - Not needed in Main
	// voice charges 			( voiceMin, voiceMinAllowed / voicePrice ) - Done
	// text charges				( textMessages, textMessagesAllowed / textPrice) - Done
	// data charges				( dataUsed, dataAllowed / dataPrice) - Done
	// subtotal Calculator			( baseCharge, voicePrice, textPrice, dataPrice / subtotal)
	// sales tax				( subtotal, tax / finalTotal)
	// bill 				( main)
	// rounding				( dataUsed / dataUsedRounded) - Done

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment2;

import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
import static java.lang.System.out;
import java.util.Scanner;
import static javax.swing.UIManager.getInt; //added
import static javax.swing.UIManager.getString; // added

/**
 *
 * @author User1
 */
public class Assignment2 {
    
    /**
     * @param args the command line arguments
     */
     final static Scanner cin = new Scanner(System.in);
    
    public static void main(String[] args) {
    // TODO code application logic here
    //Given Variable
	//	baseCharge			( Base Charge, float)
	//	voiceMinAllowed			( Voice Minutes Allowed, int)
	//	textMessagesAllowed		( Text Messeages Allowed, int)
	//	dataAllowed			( Data Allowed in Kilobytes, int)
	//	tax				( Tax, float)
	final double BASECHARGE = 20.00;
	final int VOICEMINALLOWED = 100;
	final int TEXTMESSAGESALLOWED = 100;
	final int DATAALLOWED = 100000;
	final double TAX = 7.25;
	// Assignment title
	// Welcome
	out.println("CPS 150 Assignment 2 by Solomon West");
	out.println();
	out.println("Welcome to the ABC Wireless bill calculator!");
	out.println();
	// Costomer inputs (First name, Last name, Voice minutes used, Text Messeages used, Data used (kilobytes)
        int voiceMin, textMessages, dataUsed;
        String firstName, lastName;
        firstName = getString("Costomers first name:  ");
	lastName = getString("Customers last name:  ");
	voiceMin = getInt("Voice minutes used:  ");
	textMessages = getInt("Text messages used:  ");
	dataUsed = getInt("Data used (kilobytes):  ");
	out.println("-----------------------------------");
	out.println();
	// ABC Wireless
	// ============
	out.println("ABC Wireless");
	out.println("============");
	out.println();
	// Costomers full name ( firstName + lastName );
	String fullName = firstName + lastName;
	out.printf("Costomer:%s\n", fullName);
	// Usages and charges
	// ------------------
	System.out.println("Usages and Charges");
	System.out.println("------------------");
        double voicePrice = voiceCharge(voiceMin, VOICEMINALLOWED);
        double textPrice = textCharge(textMessages, TEXTMESSAGESALLOWED);
        double dataPrice = dataCharge(dataUsed, DATAALLOWED);
	// Item - Allowed - Used - Charge
        System.out.printf("Item\t\tAllowed\t\tUsed\t\tCharge\n");
	// "Base Charge" - - baseCharge
        System.out.printf("Base Charge\t\t\t\t\t%1.2f\n", BASECHARGE);
	// "Voice minutes" - voiceMinAllowed - voiceMin - voicePrice
        System.out.printf("Voice minutes\t%d\t\t%d\t\t%1.2f\n", VOICEMINALLOWED, voiceMin, voicePrice);
        // "Text messages" - TEXTMESSAGESALLOWED - textMessages - textPrice
        System.out.printf("Text messages\t%d\t\t%d\t\t%1.2f\n", TEXTMESSAGESALLOWED, textMessages, textPrice);
	// "Data (kbytes)" - DATAALLOWED - dataUsed - dataPrice
        System.out.printf("Data (kbytes)\t%d\t\t%d\t\t%1.2f\n", DATAALLOWED, dataUsed, dataPrice);
	// ---------
        System.out.printf("\t\t\t\t%6s===============\n", " ");
	double subtotal = dataPrice + textPrice + voicePrice + BASECHARGE;
        // "Subtotal" - subtotalPrice
        System.out.printf("\t\t\t\tSubtotal%12.2f\n", subtotal);
	double salesTax = salesTaxCalculator(subtotal, TAX );
        // "Tax" - tax
        System.out.printf("\t\t\t\tTax%17.2f\n", salesTax);
	// =========
        System.out.printf("\t\t\t\t%6s===============\n", " ");
	double totalDue = totalDue( subtotal, salesTax);
        // "Total Due: $" - finalTotal
        System.out.printf("\t\t\t\tTotal Due: $%8.2f\n", totalDue);
	System.out.println();
        System.out.println("Assignment 2 complete");

	
    }
    
    //voice charges method
    public static double voiceCharge(int voiceMin, int voiceMinAllowed){
		// if voice minutes are over voice minutes allowed 
			//then the charge is 5 cent a minute
			//else there is no additional charge
		// define the diffrence
		int voiceMinDiff = voiceMin - voiceMinAllowed;
		if(voiceMin > voiceMinAllowed)
		{
			double voicePrice = voiceMinDiff * 0.05;
            return voicePrice;
		}
		else
		{
			double voicePrice = 0.00;
            return voicePrice;
		}
	}
    
    //text charges method
    public static double textCharge(int textMessages, int textMessagesAllowed){
		// if text messages are over text messages allowed
			//then the charge is 5 cent a minute
			//else there is no additional charge
		// define the diffrence
		int textDiff = textMessages - textMessagesAllowed;
		if(textMessages > textMessagesAllowed)
		{
			double textPrice = textDiff * 0.02;
            return textPrice;
		}
		else
		{
			double textPrice = 0.00;
            return textPrice;
		}
	}
	
//    } had to be commented out
    
		
    //data charges method
    public static double dataCharge(int dataUsed, int dataAllowed){
		int dataDiff = dataUsed - dataAllowed;
		// if data is over 100 MB (100000 KB)
			// then its .10 dollars per 100 KB
				// call the rounding method
				// take the diffrents
				// diffrence / 100 = new diffrence
				// new diffrence * .10 = chrage
			// else there no charge
		if(dataUsed > dataAllowed)
		{
                double dataPrice;
                int roundedDataUsed;//added rounded data used
                roundedDataUsed = roundingData(dataUsed); //added
                dataDiff = roundedDataUsed - dataAllowed; //added
		dataPrice = dataDiff * .10;
                dataPrice = dataPrice /1000;
		return dataPrice;
            //return textPrice;
		}
		else
		{
			double dataPrice = 0.00;
            return dataPrice;
		}
	}	

	//rounding method
    static int roundingData(int dataUsed){
	// convert int to string
	// find the number of char in string
	// find the value of the last two char
	// replace with 0
	// convert string to int
	String dataUsedString = Integer.toString(dataUsed);
	int lastNumber = dataUsedString.length();
        lastNumber = lastNumber - 1;
	int secondToLastNumber = lastNumber - 1;
        int z = 0;
        char numZero =(char)z;
        String newDataUsedString;
        newDataUsedString = changeCharInPosition(lastNumber, numZero, dataUsedString);
        newDataUsedString = changeCharInPosition(secondToLastNumber, numZero, dataUsedString);
        int dataUsedRounded = Integer.valueOf(dataUsedString);
	return dataUsedRounded;
    }
	
    //char changing method
    static String changeCharInPosition(int position, char ch, String str){
    char[] charArray = str.toCharArray();
    charArray[position] = ch;
    return new String(charArray);
    }
    
    //sales tax Calculator method
    static double salesTaxCalculator(double subtotal,double TAX ){
        double salesTax = subtotal * TAX / 100;
        return salesTax;
    }
    
    //total due Calculator
    static double totalDue( double subtotal, double salesTax){
        double totalDue = subtotal + salesTax;
        return totalDue;
    }
    
    static int getInt(String prompt) {
        out.print(prompt);
        return cin.nextInt();
    }
    static double getDouble(String prompt) {
        out.print(prompt);
        return cin.nextDouble();
    }
    static String getString(String prompt) {
        out.print(prompt);
        return cin.next();
    }
}
